name: Security Audit

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security audit every day at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  audit:
    name: Dependency Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-audit-${{ hashFiles('**/Cargo.lock') }}

    - name: Install cargo-audit
      run: cargo install cargo-audit --locked

    - name: Run cargo audit
      run: cargo audit --deny warnings

    - name: Run cargo audit with JSON output
      if: always()
      run: cargo audit --json > audit-results.json
      continue-on-error: true

    - name: Upload audit results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: audit-results
        path: audit-results.json

  deny:
    name: Cargo Deny Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install cargo-deny
      run: cargo install cargo-deny --locked

    - name: Check licenses
      run: cargo deny check licenses

    - name: Check bans
      run: cargo deny check bans

    - name: Check advisories
      run: cargo deny check advisories

    - name: Check sources
      run: cargo deny check sources

  outdated:
    name: Check Outdated Dependencies
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-outdated
      run: cargo install cargo-outdated --locked

    - name: Check for outdated dependencies
      run: cargo outdated --exit-code 1
      continue-on-error: true

    - name: Generate outdated report
      if: always()
      run: cargo outdated --format json > outdated-report.json
      continue-on-error: true

    - name: Upload outdated report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: outdated-report
        path: outdated-report.json

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: 'cpp'  # Rust is analyzed as C++
        queries: security-and-quality

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Build for CodeQL analysis
      run: cargo build --workspace --release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
